variables:
  EXE_RELEASE_FOLDER: 'Voltage-Drop-Calculator\bin\Release'
  MSI_RELEASE_FOLDER: 'Setup\bin\Release'
  TEST_FOLDER: 'test\build\Release'
  NUGET_PATH: 'C:\Program Files (x86)\Config\'
  MSBUILD_PATH: 'C:\Program Files (x86)\MSBuild\12.0\Bin\msbuild.exe'


stages:
  - build
  - test
  - deploy

build_job:
  stage: build
  only:
    - tags
  script:
    - echo 'Hello World'

  artifacts:
    expire_in: 1 week  # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - '$env:EXE_RELEASE_FOLDER\BatchUploadConverter.exe'  # saving exe to copy to deploy folder
      - '$env:TEST_FOLDER\'  # saving entire Test project so NUnit can run tests

test_job:
  stage: test
  only:
    - tags
  script:
    - echo 'Test Job'
  artifacts:
    when: always  # save test results even when the task fails
    expire_in: 1 week  # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - '.\TestResult.xml'  # saving NUnit results to copy to deploy folder
  dependencies:
    - build_job

deploy_job:
  stage: deploy
  only:
    - tags
  script:
    # Compose a folder for each release based on commit tag.
    # Assuming your tag is Rev1.0.0.1, and your last commit message is 'First commit'
    # the artifact files will be copied to:
    # P:\Projects\YourApp\Builds\Rev1.0.0.1 - First commit\
    - '$commitSubject = git log -1 --pretty=%s'

    # xcopy takes care of recursively creating required folders
    - 'xcopy /y ".\$env:EXE_RELEASE_FOLDER\BatchUploadConverter.exe" "$deployFolder"'
    #- 'xcopy /y ".\$env:MSI_RELEASE_FOLDER\YourApp Setup.msi" "$deployFolder"'
    - 'xcopy /y ".\TestResult.xml" "$deployFolder"'
  dependencies:
    - build_job
    - test_job




 